package project;

import java.sql.*;
import java.util.*;


public class Database1 {
	
	Connection con = null;
	Statement stmt = null;
	String url = "jdbc:mysql://localhost:3306/madang?serverTimezone=Asia/Seoul";
	String user = "root";
	String passwd = "1234";
	String tableName = null;
	
	
	public static void main(String[] args) {
		
		Database1 db = new Database1();
	    
		try {

			Class.forName("com.mysql.cj.jdbc.Driver");
			db.con = DriverManager.getConnection(db.url, db.user, db.passwd);
			db.stmt = db.con.createStatement();
			while(true) {
				System.out.println();
			System.out.println(" << Welcome to the Hello World's Library ! >>");
			System.out.println();
			System.out.println("[1] 테이블 생성");
			System.out.println("[2] 도서목록 및 데이터 추가");
			System.out.println("[3] 도서목록 및 데이터 삭제");
			System.out.println("[4] 도서목록및 데이터 세부내용 변경");
			System.out.println("[5] 테이블 조회");
			System.out.println("[6] 도서 대여");
			System.out.println("[7] 도서 반납");
			System.out.println();
			System.out.print(" 설정하고자 하는 번호를 입력해주세요 : ");
			Scanner s = new Scanner(System.in);
			int num = s.nextInt();
			
			switch(num) {
				case 1 :
					db.createTable();
					break;
				case 2 :
					db.insertData();
					break;
				case 3 :
					db.removeData();
					break;
				case 4 :
					db.changeData();
					break;
				case 5 :
					db.viewData();
					break;
				case 6 :
					db.rentalbook();
					break;
				case 7 :
					db.returnbook();
					break;
			}
		  }
		} catch(Exception e) {
			System.out.println(e.toString());
		} finally {
			try {
				db.stmt.close();
				db.con.close();				
			} catch(Exception e) {
				System.out.println(e.toString());
			}
		}
	
	}
		void createTable() {
			try {
				Scanner in = new Scanner(System.in);
				System.out.print("테이블 이름을 입력하세요 : ");
				tableName = in.nextLine();
				if(tableName.equals("book001")) {
					String createStr = "CREATE TABLE " + tableName + " (bookid int not null, bookname varchar(40) not null, "
																	+ "publisher varchar(40), author varchar(40), PRIMARY KEY (bookid))";
						stmt.execute(createStr);
						System.out.println("테이블 생성 성공!");					
				} else if(tableName.equals("rental")) {
					String createStr = "CREATE TABLE "+ tableName + "(bookid int not null, custid int not null, rentaldate date, returndate date, rental varchar(40) not null,"
												+ " Foreign key (custid) references customer5(custid), Foreign key (bookid) references book001(bookid))"; //외래키 설정
						stmt.execute(createStr);
						System.out.println("테이블 생성 성공!");
				} else if(tableName.equals("customer5")){ 
					String createStr = "CREATE TABLE "+ tableName + "(custid int primary key, custname varchar(30), "
																	+ "phone varchar(40) not null, address varchar(40) not null)";
						stmt.execute(createStr);
						System.out.println("테이블 생성 성공!");
				}
			
			} catch(Exception e) {
				System.out.println("테이블 생성 실패 이유 : " + e.toString());
			}
		}
	
		//삽입
		void insertData() {
		    try {
		        Scanner in = new Scanner(System.in);

		        System.out.print("데이터를 추가할 테이블을 입력해주세요 : ");
		        String tableName = in.nextLine();
		        if(tableName.equals("book001")) {
		            System.out.print("책의 번호를 입력하세요 : ");
		            int bookid = in.nextInt();

		            in.nextLine();

		            System.out.print("책의 이름을 입력하세요 : ");
		            String bookname = in.nextLine();
		            System.out.print("출판사를 입력하세요 (출판사를 모른다면 null값도 가능합니다.) : ");
		            String publisher = in.nextLine();
		            System.out.print("책의 저자를 입력하세요 (저자를 모른다면 null값도 가능합니다.) : ");
		            String author = in.nextLine();

		            String insertStr = "INSERT INTO " + tableName + " VALUES('" + bookid + "', '" + bookname + "', '" + publisher + "', '" + author + "')";
		            stmt.executeUpdate(insertStr);
		            System.out.print("데이터 추가 성공!");
		        } else if(tableName.equals("rental")) {
		            System.out.print("책의 번호를 입력하세요 : ");
		            int bookid = in.nextInt();

		            in.nextLine();

		         
		            System.out.print("고객 아이디를 입력하세요 : ");
		            int custid = in.nextInt();
		            in.nextLine(); // consume newline character

		        
		            System.out.print("대여일를 입력하세요 : ");
		            String rentaldate = in.nextLine();
		            System.out.print("반납일을 입력하세요 : ");
		            String returndate = in.nextLine();
		            System.out.print("대여여부를 입력하시오( 대여중 / 대여가능 ) : ");
		            String rental = in.nextLine();

		            String insertStr = "INSERT INTO " + tableName + " VALUES(" + bookid + ", '" +  custid + "', '" + rentaldate + "', '" + returndate + "', '"+rental+"')";
		            stmt.executeUpdate(insertStr);
		            System.out.println("데이터 추가 성공!");
		            
		        }else if(tableName.equals("customer5")) {
		        	System.out.print("고객번호를 입력하세요 : ");
		        	int custid = in.nextInt();
		        	
		        	in.nextLine();
		        	System.out.print("고객 이름을 입력하세요 : ");
		            String custname = in.nextLine();
		            System.out.print("고객 전화번호를 입력하세요 : ");
		            String phone = in.nextLine();
		            System.out.print("고객 주소를 입력하세요 : ");
		            String address = in.nextLine();
		            
		            String insertStr = "insert into "+ tableName + " values(" +custid+", '"+custname+"', '"+phone+"', '"+address+"')";
		           
		            stmt.executeUpdate(insertStr);
		            System.out.println("데이터 추가 성공!");
		       
		        }
		        
		    } catch(Exception e) {
		        System.out.println("데이터 추가 실패 이유 : " + e.toString());
		    }
		}
		


		//삭제
		void removeData() {
			try {
				Scanner in = new Scanner(System.in);
				System.out.print("도서목록을 삭제할 테이블을 입력하세요 : ");
				tableName = in.nextLine();
				
				System.out.print("삭제할 도서의 북ID를 입력하세요 : ");
				int num = in.nextInt();
				
				String removeStr = "DELETE FROM " + tableName + " WHERE bookid='"+ num + "'";
				stmt.executeUpdate(removeStr);
				System.out.println("데이터 삭제 성공!");
			} catch(Exception e) {
				System.out.println("데이터 삭제 실패 이유 : " + e.toString());
			}
		}

		//수정
		void changeData() {
			try {
				Scanner in = new Scanner(System.in);			
				System.out.print("수정할 데이터 테이블을 입력하시오 : ");
				tableName = in.nextLine();
				System.out.print("어느 필드를 수정할 것인지 입력하시오 : ");
				String field = in.nextLine();
				System.out.print("수정 할 데이터를 입력하시오 : ");
				String updatedate = in.nextLine();
				System.out.print("수정 할 데이터의 ID를 입력하시오 : ");
				String bookid = in.nextLine();
				
				String changeStr = "UPDATE " + tableName + " SET " + field + "='" + updatedate+"' WHERE bookid="+bookid+"";
				stmt.executeUpdate(changeStr);
				System.out.println("데이터 변경 성공!");
			} catch(Exception e) {
				System.out.println("데이터 변경 실패 이유 : " + e.toString());
			}
		}

		//조회
		void viewData() {
		    try {      
		    	
		        Scanner in = new Scanner(System.in);

		        System.out.print("조회할 테이블을 입력하시오 : ");
		        String searchtable = in.nextLine();
		        
		        if(searchtable.equals("book001")) {
		        	System.out.println("===================== 도 서 조 회 =======================");
		            String viewStr1 = "SELECT * FROM " + searchtable;
		            ResultSet result1 = stmt.executeQuery(viewStr1);
    		           System.out.println("북ID\t책이름\t\t출판사\t\t저자");
    		           System.out.println("-------------------------------------------------------");
		           
    		           while(result1.next()) {
    		        	   System.out.print(result1.getInt("bookid") + "\t" + result1.getString("bookname")
		                                 + "\t" + result1.getString("publisher") + "\t\t" + result1.getString("author") +"\n");
		            }
    		        System.out.println("=======================================================");
		            System.out.println("");
		            System.out.println("데이터 조회 성공!");
		            System.out.println("");
		            
		        } else if(searchtable.equals("rental")) {
		        	System.out.println("===================== 대 여 목 록 =======================");
		            String viewStr1 = "SELECT * FROM " + searchtable;
		            ResultSet result1 = stmt.executeQuery(viewStr1);

		            System.out.println("북ID\t고객ID\t대여날짜\t\t반납날짜\t\t대여여부");
		            System.out.println("-------------------------------------------------------");
		            while(result1.next()) {
		                System.out.print(result1.getInt("bookid") +"\t" + result1.getInt("custid") + "\t" + result1.getString("rentaldate")
		                					+ "\t"+ result1.getString("returndate")+ "\t"+ result1.getString("rental") +"\n");
		            }
		            
		            System.out.println("=======================================================");
		            System.out.println("");
		            System.out.println("데이터 조회 성공!");
		            System.out.println("");
		        } else if (searchtable.equals("customer5")) {
		        	System.out.println("===================== 고 객 조 회 =======================");
		        	String viewStr1 = "SELECT * FROM " + searchtable;
		        	 ResultSet result1 = stmt.executeQuery(viewStr1);
		        	 
		        	 System.out.println("고객ID\t고객성함\t\t전화번호\t\t주소");
		        	 System.out.println("-------------------------------------------------------");
			            while(result1.next()) {
			                System.out.print(result1.getInt("custid") + "\t" + result1.getString("custname")+"\t\t"
			                                 + result1.getString("phone") + "\t"+ result1.getString("address") + "\n");
			            }
			        System.out.println("=======================================================");
			        System.out.println("");
			        System.out.println("데이터 조회 성공!");
			        System.out.println("");
		        }
		    } catch(Exception e) {
		        System.out.println("데이터 조회 실패 이유 : " + e.toString());
		    }
		}
		
		
		void rentalbook() {
			
		    try {
		        Scanner in = new Scanner(System.in);

		        // 대여할 테이블 입력
		        System.out.print("대여할 테이블을 입력하시오 : ");
		        String searchtable = in.nextLine();
		        System.out.println("===================== 대 여 목 록 =======================");
		        String viewStr1 = "SELECT * FROM " + searchtable;
		        ResultSet result1 = stmt.executeQuery(viewStr1);

		        // 조회 결과 출력
		        System.out.println("북ID\t고객ID\t대여날짜\t\t반납날짜\t\t대여여부");
		        System.out.println("-------------------------------------------------------");
		        while (result1.next()) {
		            System.out.print(result1.getInt("bookid")+"\t"+result1.getInt("custid")+"\t" + result1.getString("rentaldate")+"\t"
		            												+ result1.getString("returndate")+"\t"+result1.getString("rental")+"\n");
		        
		        }
		        System.out.println("=======================================================");

		        // 대여할 도서목록의 bookid 입력
		        System.out.print("대여할 도서목록의 북ID를 입력해주세요 : ");
		        int bookid = in.nextInt();

		        // 다시 ResultSet에서 첫 번째 행으로 돌아가기
		        result1.beforeFirst();

		        // rental이 1인 경우 rental을 0으로 업데이트
		        boolean found = false;
		        
		        while (result1.next()) {
		            if (result1.getInt("bookid") == bookid && result1.getString("rental") == "'대여가능'") {
		                String changeStr = "UPDATE " + searchtable + " SET rental = '대여중' WHERE bookid = " + bookid ;
		                stmt.executeUpdate(changeStr);
		                System.out.println("대여성공!");
//		                System.out.println(changeStr.toString());
		                found = true;
		                break;
		            }
		        }

		        if (!found) {
		            System.out.println("이미 다른 사람이 대여중인 책 입니다. 대여할 수 없습니다.");
		        }

		    } catch (Exception e) {
		        System.out.println("데이터 변경 실패 이유 : " + e.toString());
		    }
		}
		
		void returnbook() {
		    try {
		        Scanner in = new Scanner(System.in);

		        // 반납할 테이블 입력
		        System.out.println("반납할 테이블을 입력하시오: ");
		        String searchtable = in.nextLine();
		        System.out.println("===================== 대 여 목 록 =======================");
		        String viewStr1 = "SELECT * FROM " + searchtable;
		        ResultSet result1 = stmt.executeQuery(viewStr1);

		        // 조회 결과 출력
		        System.out.println("북ID\t고객ID\t대여날짜\t\t반납날짜\t\t대여여부");
		        System.out.println("-------------------------------------------------------");
		        while (result1.next()) {
		            System.out.print(result1.getInt("bookid") + "\t" + result1.getInt("custid") + "\t" + result1.getString("rentaldate") 
		            															+ "\t"+ result1.getString("returndate")+"\t"+result1.getString("rental") +"\n");
		        }
		        System.out.println("=======================================================");

		        // 반납할 도서목록의 bookid 입력
		        System.out.print("반납할 도서목록의 북ID를 입력해주세요 : ");
		        int bookid = in.nextInt();
//		        String field1 = in.nextLine();
		        // 다시 ResultSet에서 첫 번째 행으로 돌아가기
		        result1.beforeFirst();

		        // rental이 0인 경우 rental을 1로 업데이트
		        
		        boolean found = false;
		        
		        while (result1.next()) {
		            if (result1.getInt("bookid") == bookid && result1.getString("rental") == "'대여중'") {
		            	
		                String changeStr = "UPDATE " +searchtable+ " SET rental='대여가능' WHERE bookid=" + bookid ;
		                stmt.executeUpdate(changeStr);
		                System.out.println("반납 성공!");
		               
//		                System.out.println(changeStr.toString());
		                found = true;
		                break;
		            }
		        }

		        if (!found) {
		            System.out.println("이미 반납된 책이거나 대여 된적이 없는 책입니다.");
		        }

		    } catch (Exception e) {
		        System.out.println("데이터 변경 실패 이유 : " + e.toString());
		    }
		}

	}